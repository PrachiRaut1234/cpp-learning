#include <iostream>
#include<queue>
using namespace std;

class Queue {
    int* arr;    
    int size;    
    int front;   
    int rear;    

public:
    Queue(int n) {
        size = n;
        arr = new int[size];
        front = 0;
        rear = 0;
    }

  
    void enqueue(int data) {
        if(rear == size) {
            cout << "Queue is full\n";
            return;
        }
        arr[rear++] = data;
    }

    int dequeue() {
        if(front == rear) {
            cout << "Queue is empty\n";
            return -1;
        }
        int ans = arr[front];
        arr[front] = -1; 
        front++;
        
        if(front == rear) {
            front = 0;
            rear = 0;
        }
        return ans;
    }

    int getFront() {
        if(front == rear) return -1;
        return arr[front];
    }

    bool isEmpty() {
        return front == rear;
    }

    int getSize() {
        return rear - front;
    }
};

int main() {
    Queue q(5);

    q.enqueue(10);
    q.enqueue(50);
    q.enqueue(60);

    cout << "Front element: " << q.getFront() << endl; 
    cout << "Dequeued: " << q.dequeue() << endl; 
    cout << "Front element after dequeue: " << q.getFront() << endl; 

    return 0;
}
