
#include<bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right;
    Node(int val) : data(val),left(NULL),right(NULL){
        
    }
    
};
vector<int> bottomView(Node* root){
    vector<int> result;
    if(!root) return result;
    
    map<int, int> bottomNode;
    queue<pair<Node*, int>> q;
    
    q.push({root,0});
    
    while(!q.empty()){
        auto p = q.front();
        q.pop();
        Node* node = p.first;
        int hd = p.second;
        
        bottomNode[hd] = node->data;
        
        if(node->left)q.push({node-> left, hd - 1});
        if(node->right)q.push({node-> right, hd + 1});
    }
    for(auto& it : bottomNode)
        result.push_back(it.second);
    return result;
}
int main() {
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->right->left = new Node(6);
    root->right->right = new Node(7);
    root->right->left->right = new Node(8);
    
    vector<int> ans = bottomView(root);
    for(int x : ans) cout << x << " ";
    return 0;
}
