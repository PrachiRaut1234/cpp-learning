#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;
    Node(int val) {
        data = val;
        left = right = NULL;
    }
};

class Solution {
public:
    void solve(Node* root, int k, vector<int> &path, int &count) {
        if (root == NULL) return;

        path.push_back(root->data);

        solve(root->left, k, path, count);
        solve(root->right, k, path, count);

        int sum = 0;
        for (int i = path.size() - 1; i >= 0; i--) {
            sum += path[i];
            if (sum == k)
                count++;
        }

        path.pop_back();
    }

    int sumK(Node* root, int k) {
        vector<int> path;
        int count = 0;
        solve(root, k, path, count);
        return count;
    }
};
int main(){
    Node* root = new Node(1);
    root->left = new Node(3);
    root->right = new Node(-1);
    root->left->left = new Node(2);
    root->left->right = new Node(1);
    root->left->right->left = new Node(1);
    root->right->left = new Node(4);
    root->right->right = new Node(5);
    root->right->right->left = new Node(2);
    root->right->right->right = new Node(6);
    
    Solution s;
    int k = 7;
    cout << "Number of K-Sum Paths: " << s.sumK(root,k)<<endl;
    return 0;
}
