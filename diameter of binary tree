#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;
    Node(int val) {
        data = val;
        left = right = NULL;
    }
};

pair<int,int> diameterFast(Node* root) {
    if (root == NULL) return {0, 0}; 

    auto left = diameterFast(root->left);
    auto right = diameterFast(root->right);

    int op1 = left.first;                    
    int op2 = right.first;                   
    int op3 = left.second + right.second + 1; 

    int dia = max({op1, op2, op3});
    int h = max(left.second, right.second) + 1;

    return {dia, h};
}

int diameter(Node* root) {
    return diameterFast(root).first;
}


Node* buildSampleTree() {
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->left->left->left = new Node(6);
    return root;
}

int main() {
    Node* root = buildSampleTree();
    cout << "Diameter of tree: " << diameter(root) << endl;
    return 0;
}
