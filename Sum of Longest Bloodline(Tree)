#include<bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right;
    Node(int val) : data(val),left(NULL),right(NULL){
        
    }
};
void solve(Node* root, int sum, int len, int &maxSum, int &maxLen){
    if(root == NULL){
        if(len > maxLen){
            maxLen = len;
            maxSum = sum;
        }
        else if(len == maxLen){
            maxSum = max(maxSum,sum);
        }
        return;
    }
    sum += root->data;
    
    solve(root->left,sum,len+1,maxSum,maxLen);
    solve(root->right,sum,len+1,maxSum,maxLen);
}
int sumOfLongRootToLeafPath(Node* root){
    int maxSum = INT_MIN;
    int maxLen = 0;
    solve(root,0,0,maxSum,maxLen);
    return maxSum;
}
int main(){
    Node* root = new Node(4);
    root->left = new Node(2);
    root->right = new Node(5);
    root->left->left = new Node(7);
    root->left->right = new Node(1);
    root->right->right = new Node(2);
    
    cout << "Sum of longest Bloodline = " << sumOfLongRootToLeafPath(root) << endl;
    return 0;
}
