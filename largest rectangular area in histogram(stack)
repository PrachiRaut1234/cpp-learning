#include<bits/stdc++.h>
using namespace std;

vector<int> nextSmallerElement(vector<int> arr, int n){
    stack<int> st;
    st.push(-1);
    vector<int> ans(n);
    
    for(int i = n - 1; i >= 0; i--){
        int curr = arr[i];
        
        while(st.top() != -1 && arr[st.top()] >= curr){
            st.pop();
        }
        ans[i] = st.top();
        st.push(i);
    }
    return ans;
}
vector<int> prevSmallerElement(vector<int> arr, int n){
    stack<int> st;
    st.push(-1);
    vector<int> ans(n);
    
    for(int i = 0; i<n; i++){
        int curr = arr[i];
        
        while(st.top() != -1 && arr[st.top()] >= curr){
            st.pop();
        }
        ans[i] = st.top();
        st.push(i);
    }
    return ans;
    
}
int largestRectangleArea(vector<int>& heights){
    int n = heights.size();
    
    vector<int> next = nextSmallerElement(heights, n);
    vector<int> prev = prevSmallerElement(heights, n);
    
    int area = INT_MIN;
    for(int i = 0; i<n; i++){
        int height = heights[i];
        
        if(next[i] == -1){
            next[i] = n;
        }
        int width = next[i] - prev[i] - 1;
        
        int newArea = height * width;
        
        area = max(area , newArea);
    }
    return area;
}
int main(){
    vector<int> height = {2,1,5,6,2,3};
    cout << "Largest Rectangle Area : " << largestRectangleArea(height) << endl;
    return 0;
}
